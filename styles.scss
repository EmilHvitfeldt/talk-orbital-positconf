$colors: (
  "lightyellow": #FAF6CC,
  "yellow": #F6DD8B,
  "lightpink": #f796cc,
  "pink": #E21285,
  "blue": #92E1F4,
  "grey": #d2d2d2,
);

/*-- scss:functions --*/

@function theme-color($color) {
  @return map-get($colors, $color);
}

// https://codepen.io/acezard/details/MymqWO
@function stroke($stroke, $color) {
  $shadow: (
  );
$from: $stroke*-1;

@for $i from $from through $stroke {
  @for $j from $from through $stroke {
    $shadow: append($shadow, $i*1px $j*1px 0 $color, comma);
  }
}

@return $shadow;
}

@mixin stroke($stroke, $color) {
  text-shadow: stroke($stroke, $color);
}

/*-- scss:defaults --*/

@font-face {
  font-family: 'Dodger';
  src: url("../../../../../good_times_rg.ttf") format('woff');
  font-weight: normal;
  font-style: normal;
}

$body-color: theme-color("lightyellow");
$link-color: theme-color("pink");
$code-color: theme-color("blue");

/*-- scss:rules --*/

@each $name, $color in $colors {
  .text-#{$name} {
    color: $color;
  }

  .bg-#{$name} {
    background-color: $color;
  }
}

.dodger {
  font-family: 'Dodger';
}

.title {
  font-family: "Dodger";
  color: theme-color("blue");
  @include stroke(2, theme-color("lightyellow"));
}

.reveal {

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: "Dodger";
    color: theme-color("yellow");
  }

  // stop height restriction on code chunks 
  pre.sourceCode code {
    max-height: 1000px;
  }

  pre code {
    max-height: 500px;
  }

  // code chunks
  div.sourceCode code,
  div.sourceCode,
  pre,
  pre code,
  .column-output-location .column:first-of-type div.sourceCode {
    background-color: rgba(0, 0, 0, 0);
    border: none;
  }

  .slides section .fragment {
    &.tmp-hl-pink {
      opacity: 1;
      visibility: inherit;

      &.current-fragment {
        color: theme-color("lightpink");
      }
    }

    &.hl-pink {
      opacity: 1;
      visibility: inherit;

      &.visible,
      &.current-fragment {
        color: theme-color("lightpink");

      }
    }

    &.hl-grey {
      opacity: 1;
      visibility: inherit;

      &.visible,
      &.current-fragment {
        color: theme-color("grey");
      }
    }

  }
}

// code highlighting
pre>code.sourceCode>span {
  color: $body-color;
}

code span {

  &.dv,
  &.fl,
  &.cn,
  &.st {
    color: theme-color("lightpink");
  }

  &.fu {
    color: theme-color("blue");
  }

  &.ot,
  &.sc {
    color: theme-color("lightyellow");
  }

  &.at,
  &.cf {
    color: theme-color("yellow");
  }

  &.co,
  &.an {
    color: theme-color("grey");
  }
}

// custom monospaced text
.mono {
  font-family: monospace;

  p {
    margin-top: 0;
    margin-bottom: 0;
  }

  &.margin p {
    margin-top: 16px;
  }
}

// Background images
@mixin background-full {
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

@mixin theme-slide($number) {
  .theme#{$number} {
    &:is(.slide-background) {
      background-image: url('../../../../../assets/SVG/theme#{$number}.svg');
      @include background-full;
    }
  }
}

@for $i from 1 through 13 {
  @include theme-slide($i);
}

// Shinylive
.shinylive-wrapper {
  height: 600px;
}

.size40>* {
  font-size: 40px;
}

.highlight-last {
  .current-fragment {
    color: theme-color("yellow");
  }
}